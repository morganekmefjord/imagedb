version: "2.4"

networks:
  image-db-net:
    driver: bridge
    name: image-db-net
  traefik_web:
    external:
      name: traefik_web


volumes:
  # Either use a docker-volume for database
    db-data-pg:
  
  # Or bind mount a directory
  #db-data-pg:
  #  driver: local
  #  driver_opts:
  #    type: none
  #    device: ${SHARE_DB_DATA?You need to specify env SHARE_DB_DATA, e.g. SHARE_DB_DATA=/mnt/imageDB/postgres-db/}
  #    o: bind

services:

  imagedb:
    image: bitnami/postgresql:11.5.0-debian-9-r26
    restart: always
    cpus: 4
    mem_limit: 4g
    privileged: true
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
    # This ports definition is only for ability to connect to dev-db from
    # Kubernetes
    ports:
      - 5432:5432
    volumes:
      - db-data-pg:/bitnami/postgresql
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - image-db-net
      - traefik_web

  imagedbadminer:
    image: adminer
    restart: always
    cpus: 2
    mem_limit: 2g
    ports:
      - 8084:8080
    networks:
      - image-db-net
      - traefik_web
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_web"
      - "traefik.port=8084"
      - "traefik.http.routers.imagedbadminer.rule=Host(`${TRAEFIK_FRONTEND_URL?You need to specify env TRAEFIK_FRONTEND_URL, e.g. TRAEFIK_FRONTEND_URL=name.my-domain.com}`)"
      - "traefik.http.routers.imagedbadminer.entrypoints=websecure"
      - "traefik.http.routers.imagedbadminer.tls.certresolver=myresolver"
