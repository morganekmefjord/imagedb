version: "2.4"

networks:
  image-db-net:
    external:
      name: image-db-net
  traefik:
    external:
      name: traefik_web

volumes:
  # this is microimages r-o share
  mikroimages-bind:
    driver: local
    driver_opts:
      type: none
      device: ${SHARE_MIKRO?You need to specify env SHARE_MIKRO, e.g. SHARE_MIKRO=/share/mikro}
      o: bind
  # this is thumbnail volume
  imagedb-bind:
    driver: local
    driver_opts:
      type: none
      device: ${SHARE_IMAGEDB?You need to specify env SHARE_IMAGEDB, e.g. SHARE_IMAGEDB=/share/imagedb}
      o: bind

# Webroot
  webroot-bind:
    driver: local
    driver_opts:
      type: none
      device: ${WEBROOT?You need to specify env WEBROOT, e.g. WEBROOT=/home/anders/projekt/imagedb/webserver}
      o: bind

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: imageweb
    environment:
      CONF_FILE: ${CONF_FILE?You need to specify env CONF_FILE, e.g. settings_dev_local.json, settings_prod.json}
    cpus: 2
    mem_limit: 2g
    ports:
      - 8080:8080
    restart: always
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik_web
      - traefik.backend=web
      - traefik.frontend.rule=${TRAEFIK_FRONTEND_RULE?You need to specify env TRAEFIK_FRONTEND_RULE, e.g. TRAEFIK_FRONTEND_RULE=HOST:name.my-domain.com}
      # If TRAEFIK_BASIC_AUTH is specified here in docker-compose file then you need to escape $ with $ see traefik webpage
      # if specified in .env file then you don't need to escape $
      - traefik.frontend.auth.basic=${TRAEFIK_BASIC_AUTH? You need to specify env TRAEFIK_BASIC_AUTH, e.g. TRAEFIK_BASIC_AUTH=username:$blablsbskjfhbsjhslkfsjlkdslkjf/kljsd}
      - traefik.port=8080
    networks:
      - image-db-net
      - traefik
    volumes:
      - webroot-bind:/app
      - mikroimages-bind:/share/mikro
      - imagedb-bind:/share/imagedb

